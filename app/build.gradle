import com.caldremch.android.version.Deps

plugins {
    id 'com.caldremch.android.version'
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'com.tencent.matrix-plugin'
//    id 'kotlin-parcelize'
}

android {
    compileSdkVersion Deps.compileSdkVersion
    buildToolsVersion Deps.buildToolsVersion
    defaultConfig {
        minSdkVersion Deps.minSdkVersion
        targetSdkVersion Deps.targetSdkVersion
        versionCode Deps.versionCode
        versionName Deps.versionName
        applicationId Deps.applicationId
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

//matrix {
//    trace {
//        enable = true	//if you don't want to use trace canary, set false
//        baseMethodMapFile = "${project.buildDir}/matrix_output/Debug.methodmap"
//        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
//    }
//}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation(Deps.kotlin_stdlib)
    implementation(Deps.appcompat)
    implementation(Deps.ktx)
    implementation(Deps.constraintlayout)
    implementation(Deps.recyclerview)
    implementation(Deps.BaseRecyclerViewAdapterHelper)
    implementation(Deps.cardview)
    implementation(Deps.design)
    implementation(Deps.glide)
    debugImplementation(Deps.leakcanary)
    implementation(Deps.coroutines)
    implementation(project(":PickerView"))
    implementation(project(":dialog"))
    implementation(project(":widget"))
    implementation(project(":utils"))
    implementation(project(":common"))
    implementation(project(":image-core"))
//    implementation(project(":native-logger"))
    implementation 'com.kirich1409.viewbindingpropertydelegate:vbpd-noreflection:1.4.1'
    debugImplementation "com.github.silencedut.fpsviewer:fpsviewer:0.8.2"
    implementation(Deps.entry)
    kapt(Deps.entry_compiler)
    implementation 'pub.devrel:easypermissions:3.0.0'
    //matrix
    implementation group: "com.tencent.matrix", name: "matrix-android-lib", version: MATRIX_VERSION, changing: true
    implementation group: "com.tencent.matrix", name: "matrix-android-commons", version: MATRIX_VERSION, changing: true
    implementation group: "com.tencent.matrix", name: "matrix-trace-canary", version: MATRIX_VERSION, changing: true
    implementation group: "com.tencent.matrix", name: "matrix-resource-canary-android", version: MATRIX_VERSION, changing: true
    implementation group: "com.tencent.matrix", name: "matrix-resource-canary-common", version: MATRIX_VERSION, changing: true
    implementation group: "com.tencent.matrix", name: "matrix-io-canary", version: MATRIX_VERSION, changing: true
    implementation group: "com.tencent.matrix", name: "matrix-sqlite-lint-android-sdk", version: MATRIX_VERSION, changing: true
}

ext.unusedResourcesSet = new HashSet<String>();
matrix {
    trace {
        enable = true
        baseMethodMapFile = "${project.projectDir}/matrixTrace/methodMapping.txt"
        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
    }
//    removeUnusedResources {
//        enable true
//        variant = "debug"
//        needSign false
//        shrinkArsc true
//        //Notice: You need to modify the  value of $apksignerPath on different platform. the value below only suitable for Mac Platform,
//        //if on Windows, you may have to  replace apksigner with apksigner.bat.
//        apksignerPath = "${android.getSdkDirectory().getAbsolutePath()}/build-tools/${android.getBuildToolsVersion()}/apksigner"
//        unusedResources = project.ext.unusedResourcesSet
//        ignoreResources = ["R.id.*", "R.bool.*"]
//    }
}

