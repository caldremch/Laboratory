import com.caldremch.android.version.Shadow

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.caldremch.android.version'
}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId Shadow.applicationId
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'commons-io:commons-io:2.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //shadow compile
    implementation "com.tencent.shadow.core:common:${shadow_version}"
    implementation "com.tencent.shadow.dynamic:host:${shadow_version}"
    implementation project(':app-host-lib')
}

//插件的执行, 真的没那么只能, 如果你放在 android{}之前, 那么读取 BaseExtension 是读取不到的, 如果是放在这个位置, 就可以
//apply plugin: LaboratoryPlugin

